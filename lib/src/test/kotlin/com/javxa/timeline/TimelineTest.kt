/*
 * This source file was generated by the Gradle 'init' task
 */
package com.javxa.timeline

import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.TestFactory

class TimelineTest {
    @TestFactory
    fun `Nested branching should work as intended`() = timeline {
        Assertions.assertTrue(timelineIndex in 0..< 4)

        if (branch("outer")) {
            if (branch("inner1")) {
                Assertions.assertEquals(0, timelineIndex)
            } else {
                Assertions.assertEquals(1, timelineIndex)
            }
        } else {
            if (branch("inner2")) {
                Assertions.assertEquals(2, timelineIndex)
            } else {
                Assertions.assertEquals(3, timelineIndex)
            }
        }
    }

    @TestFactory
    fun `Branch should work as indented`() = timeline {

        val num1 = branch("num1", 0..< 2)
        val num2 = branch("num2", 0..< 2)

        println("$num1 $num2")

    }

    @TestFactory
    fun `Branch should work with when()-statements`() = timeline {

        Assertions.assertTrue(timelineIndex in 0..2)

        when (branch("number", 0..2)) {
            0 -> Assertions.assertEquals(0, timelineIndex)
            1 -> Assertions.assertEquals(1, timelineIndex)
            2 -> Assertions.assertEquals(2, timelineIndex)
        }

    }

}